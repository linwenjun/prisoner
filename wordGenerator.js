var wordGenerator = (function(){
    var strOne = "母鸡、天鹅、鳄鱼、西瓜、田螺、酱油、糯米饭、隐形眼镜、灯笼、扣子、快板、锄头、害羞、臭美、下棋、打牌发热、唱歌、射击、垂头丧气、愤怒、胸怀宽大、从容不迫、快马加鞭、狗屁不通、周杰伦、陈佩斯、青岛、馒头、贾宝玉、《变形金刚》、杨贵妃、公鸡、小狗、蟒蛇、南瓜、茄子、花生油、披萨、口红、火锅、股票、圆规、铁锤、喝水、暗恋、喷香水、打电话、吃面条、咳嗽、感冒、嚎啕大哭、火山爆发、目瞪口呆、虎背熊腰、一刀两断、卓别林、小沈阳、大庆、田东、月亮、林黛玉、鸭子、大肥猪、丹顶鹤、西红柿、哈密瓜、夜宵、方便面、剪刀、凳子、彩票、铲子、抹指甲油、毛笔、偷看美女、吃醋、跳舞、吃田螺、牙疼、假货、张牙舞爪、回眸一笑、兴高采烈、亡羊补牢、大腹便便、赵本山、和尚、长沙、友谊关、太阳、宝钗、水牛、狐狸、狗熊、榴莲、石榴、巧克力、香肠、雨伞、手电筒、车票、橡皮擦、钳子、系鞋带、唱歌、刮胡子、心肺复苏、谢谢、发冷、冷笑、金鸡独立、鸡犬不宁、呆若木鸡、颠三倒四、汗流浃背、宋丹丹、尼姑、苏州、三峡、星星、大观园、大象、老鹰、鹦鹉、莲藕、柚子、冰激凌、饼干、雨衣、温度计、存折、白内障、镰刀、酸、放屁、剃头、肌肉注射、测血压、肚子痛、假惺惺、抓耳挠腮、鸡飞狗跳、幸灾乐祸、拔苗助长、洋洋得意、《红楼梦》、武则天、杭州、漓江、妇女节、莫老爷、山羊、鲸鱼、河马、大蒜、橙子、鹌鹑蛋、咸菜、菜刀、听诊器、剃须刀、白糖、粉笔、辣、开车、洗手、对不起、喝酒、头痛、打喷嚏、挥汗如雨、三长二短、神气十足、画蛇添足、破涕为笑、法海、杨贵妃、故宫、灵山、青年节、刘三姐、老鹰、蜻蜓、企鹅、生姜、葡萄、冰糖葫芦、蛋糕、灭火器、注射器、手表、沐浴露、黑板刷、放风筝、抢劫、消毒、抱歉、网购、吓一跳、寒战、手舞足蹈、一分为二、唉声叹气、回头是岸、张曼玉、貂蝉、天安门、兵马俑、儿童节、李逵、造纸术、猴子、驴、蜈蚣、苹果、芝麻、酸菜鱼、馄饨、香皂、宝马、项链、假牙、老公、睡觉、发困、戴口罩、同意、跳绳、惊讶、新生儿、眉飞色舞、虎头蛇尾、哭笑不得、三心二意、藕断丝连、周星驰、西施、长城、大明山、教师节、武松、 青蛙、蚂蚁、蝗虫、雪梨、甘蔗、玫瑰花、红薯、帽子、奥迪、旗袍、海飞丝、老婆、洗脸、哭闹、剪指甲、斗地主、投篮、恶心、母乳喂养、五体投地、纸上谈兵、指手划脚、捶胸顿足、山盟海誓、林青霞、赵飞燕、圆明园、鸟巢、北海、国庆节、癞蛤蟆、泥鳅、乌贼、香蕉、雪梨、夜宵、芋头、纽扣、洗头、奔驰、牙刷、洗衣粉、岳父、烫、小偷、认错、刮风、呕吐、作弊、眉开眼笑、表里如一、东张西望、点头哈腰、四脚朝天、周润发、刘三姐、水立方、银滩、端午节、林冲、 蜘蛛、孔雀、海马、桃子、辣椒、哈密瓜、烧饼、皮鞋、电吹风、凳子、闹钟、丈母娘、嗑瓜子、长跑、拔河、批评、打雷、呼吸困难、黑哨、指手划脚、牛头马面、一瘸一拐、七上八下、望子成龙、张艺谋、唐僧、大观园、柳州、元旦、曹操、螃蟹、黄鼠狼、骆驼、玉米、黄瓜、郁金香、油条、红领巾、梳子、电灯泡、台灯、孙子、升旗、跳高、打气排球、拍马屁、下雨、丰满、笨蛋、手忙脚乱、老鼠过街、挤眉弄眼、虎头蛇尾、震耳欲聋、刘翔、猪八戒、上海、宾阳、春节、诸葛亮、蝌蚪、蚂蝗、瓜子、大米、吊兰、豆浆、袜子、高跟鞋、压岁钱、CD、大舅子、吃面条、流口水、打篮球、B超、晴天、苗条、红娘、手舞足蹈、大摇大摆、蹑手蹑脚、黄鼠狼给鸡拜年、雪上加霜、凤姐、沙和尚、南宁、雷峰塔、炮龙、周瑜、长颈鹿、大猩猩、果子狸、土豆、面条、菠萝、熊掌、杯子、连衣裙、奶瓶、打印机、红颜、酒醉、眼红、打乒乓球、化验、下雪、秃顶、媒婆、摇头晃脑、一手遮天废寝忘食、白日做梦、红光满面、芙蓉姐姐、唐伯虎、桂林、西湖、老师、刘备、斑马、麻雀、狸猫、柚子、老友粉、草莓、猪脚、碗牛仔裤、台灯、收音机、蜡烛、梦游、骑马、打羽毛球、体检、减肥、麻子、不及格、血盆大口、一无所有、闻鸡起舞、夸夸其谈、棒打鸳鸯、冯巩、纪晓岚、梧州、少林寺、护士节、阿斗、世界杯、眼镜蛇、猫头鹰、章鱼、石榴、螺蛳粉、木瓜、叉烧、筷子 电梯、奖金、榨汁机、灯笼、吵架、打架、跑步、测体温、补考、比赛、晚会、 尖嘴猴腮、捧腹大笑、守株待兔、小题大做、做贼心虚、犀利哥、白娘子、巴马、庐山、元宵节、关羽、蜜蜂、老鼠、绵羊、芒果、白斩狗、冬瓜、燕窝、日光灯计算器、电视机、马桶、月饼、领奖金、捡到钱、游泳、喂鸡、魔术、大嘴巴、交班、咬牙切齿、两肋插刀、掩耳盗铃、悬崖勒马、狼狈为奸、李连杰、许仙、长江、黄山、劳动节、张飞、蝴蝶、苍蝇、北极熊、龙眼、绿茶、马铃薯、炒饭、勺子电话、手机、冰箱、火柴、扣工资、闯红灯、拖地板、考试、赶时髦、高鼻梁、错误、昂首挺胸、狼吞虎咽、长吁短叹、斤斤计较、坐井观天、巩俐、超级女生、百色、泰山、流星、赵子龙、开心网、萤火虫、蚊子、野猪、荔枝、咖啡、木耳、快餐、茶叶、电脑、空调、微波炉、耳环、悄悄话、抽烟、扫地、洗衣服、健身操、双眼皮、吃西瓜、闭目养神、眉来眼去、心有灵犀一点通、盲人摸象、张冠李戴、耳目一新、周润发、流氓、黄河、西山、幼儿园、熊猫、跳蚤、穿山甲、梅花、鸡蛋、豌豆、荷包蛋、围巾拖拉机、电饭锅、孕妇装、项链、迟到、照镜子、肌肉注射、摔跤、晕倒、樱桃小嘴、鼓掌、目中无人、心心相印、狼吞虎咽、一见钟情、笨鸟先飞、刘若英、牛魔王、阳朔、研究生、偷菜、挂灯笼、布达拉宫、 第二十一组 斑马、蜜蜂、夜莺、百合花、酸粉、苦瓜、棒棒糖、毛巾、摩托车、围裙、拖鞋、活印刷、拍婚纱照、涂睫毛膏、打太极、请假、种菜、醋坛子、喝彩、鲜花插在牛粪上、没心没肺.、哈哈大笑、七嘴八舌、白日做梦、刘德华、灰太狼、《红楼梦》 融水、打坐、李宁、 第二十二组 老虎、燕子、蝎子、桃花、汉堡包、蘑菇、核桃、脸盆、烟灰缸、电风扇、发夹、淘宝网、暗恋、挤公交、开刀、迟到、浇花、中暑、吹口哨、门当户对、口是心非、恍然大悟、两面三刀、不可开交、宋祖英、斜塔、新闻联播、阿迪达、《水浒传》、葛洲坝、 第二十三组 狮子、螳螂、金钱豹、牡丹花、汤圆、竹笋、开心果、日历、床垫、空气清新剂、尿不湿、QQ、结婚、发薪水、约会、旷工、付款、腹泻、捧场、五音不全、自言自语、一五一十、左右开弓、打草惊蛇、刘欢、天坑、相声、耐克、指南针、唐山、 第二十四组 袋鼠、大肥猪、乌鸦、樱花、饺子、丝瓜、葡萄酒、电烫斗、书包、水龙头、球拍、百度、中大奖、洗碗、谈恋爱、翻身、开会、帅呆了、梳头、暴跳如雷、撒腿就跑、争先恐后、三从四德、大公无私、成龙、邕江、《西游记》、小品、韶山、大款、 第二十五组 蜗牛、恐龙、蟋蟀、紫荆花、鸡腿、洋葱、啤酒、电梯、牙膏、美女、汽水、不差钱、骑自行车、打麻将、炒菜、吹牛皮、包饺子、鹰钩鼻、抛媚眼、皮笑肉不笑、大惊小怪、丢三落四、比翼双飞、颠三倒四、周华健、天等、山歌、《三国演义》、隐私、我爸是李刚、 第二十六组 小白兔、熊猫、臭虫、韭菜、醋、手套、色狼、门铃、怀孕、遛狗、捣蛋、晒衣服、喜洋洋、S型、姗姗来迟、坐井观天、爱你一万年、嬉皮笑脸、前俯后仰、顶天立地、刘德华、医院、《红楼梦》、雪莲、济公、大兴安岭";
    var strTwo = "主板、机械鼠标、内存、菜单条、调制解调器、显示器、主板、鼠标、邮件、网卡、网桥、网关、扫描仪、像素、即插即用、指示器、端口、数据包、范围、冒泡排序、扫描器、激光打印机、调试、表格、排序、源文件、巨型机、扇区、安全、盗版、网页爬虫、尖峰电压、百度、淘宝、网上冲浪、系统分析师...、远程登录、拓扑结构、磁道、虚拟内存、360、361、网页、文字处理、自动换行、门户网站、网站、网上商店、网上应用程序、Apache、Mysql、MongoDB、Photoshop、Word、Excel、万维网、蠕虫病毒、写保护、广域网、服务器、连接、公认的服务、广域网、通配符、通配符、窗口、菜单、文件、打印、服务器、任务管理器、命名服务、管理规范、代理、资源、无线、通讯、管理规范、工作组、异或、压缩、磁盘、数据库、文档、磁盘、下载、只读、加密、搜索、固件、闪存、公式、函数、防火墙、格式化、手提电脑、笔记本电脑、笔记本、硬盘、硬件、帮助、主机、主页、超链接、黑客、循环、面向对象、高阶函数、面向过程、购物车、Javascript、封装、继承、多态、单一职责、开闭原则、里氏替换、接口隔离、重构、整洁代码、ThoughtWorks、POS机、集合、函数式、管道、linux、pwd、GIT、谷歌、苹果、站会、codereview、加班、敏捷、feedback、循环、链式调用、回调、严格模式、IOS、软件、GitHub、Retro、原型、作用域、atom、eclipse、插件、css、样式表、适配卡、高级应用、分析图表、分析、动画、应用软件、算术运算、音频输出设备、存取时间、存取、管理员、插件、地址、代理、模拟信号、程序、异步、附件、逻辑、条形码、二进制、编码、比特、浏览器、总线、备份带宽、蓝牙、宽带、电子商务、消费者、总线、单元箱、打印机、支架、芯片、清晰度、封闭式体系结构、计算机、结点、无线鼠标、只读光盘、光盘、客户端、网站、服务器、网络、淘宝、";

    var groupOne = strOne.split("、");
    var groupTwo = strTwo.split("、");

    function disorder(collection) {
        return collection.map(function(val) {
            return {
                word: val,
                weight: Math.random()
            }
        }).sort(function(a, b) {
            return a.weight - b.weight;
        }).map(function(val) {
            return val.word;
        })
    }


    return function(count, firstGroupWeight) {
        count = parseInt(count) || 100;
        firstGroupWeight = firstGroupWeight || 0.5;

        var tempGroupOne = disorder(groupOne);
        var tempGroupTwo = disorder(groupTwo);

        var firstGroupCount = parseInt(count * firstGroupWeight);
        var secondGroupCount = count - firstGroupCount;

        var firstGroup = tempGroupOne.slice(0, firstGroupCount - 1);
        var secondGroup = tempGroupTwo.slice(0, secondGroupCount - 1);

        finalGroup = firstGroup.concat(secondGroup);

        return disorder(finalGroup);
    }
})()
